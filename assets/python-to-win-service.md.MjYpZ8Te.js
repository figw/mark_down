import{_ as i,c as a,o as n,af as l}from"./chunks/framework.DSK8Vmy5.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"python-to-win-service.md","filePath":"python-to-win-service.md"}'),t={name:"python-to-win-service.md"};function h(e,s,p,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<p>要将 PyInstaller 打包的 EXE 程序设置为 Windows 服务并实现开机自启动，可以通过以下两种方法实现：</p><hr><h3 id="方法一-使用-nssm-推荐" tabindex="-1"><strong>方法一：使用 <code>nssm</code>（推荐）</strong> <a class="header-anchor" href="#方法一-使用-nssm-推荐" aria-label="Permalink to “方法一：使用 nssm（推荐）”">​</a></h3><p><code>nssm</code> (Non-Sucking Service Manager) 是 Windows 下最稳定的服务管理工具，完美支持普通 EXE 转服务。</p><h4 id="步骤-1-下载-nssm" tabindex="-1"><strong>步骤 1：下载 nssm</strong> <a class="header-anchor" href="#步骤-1-下载-nssm" aria-label="Permalink to “步骤 1：下载 nssm”">​</a></h4><ul><li>官网下载：<a href="https://nssm.cc/download" target="_blank" rel="noreferrer">https://nssm.cc/download</a></li><li>或使用 Chocolatey 安装：</li></ul><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">choco install nssm</span></span></code></pre></div><h4 id="步骤-2-安装服务" tabindex="-1"><strong>步骤 2：安装服务</strong> <a class="header-anchor" href="#步骤-2-安装服务" aria-label="Permalink to “步骤 2：安装服务”">​</a></h4><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 以管理员身份运行 CMD/PowerShell</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nssm install </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你的服务名&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 例如 MyPythonApp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在弹出的 GUI 中设置：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. &quot;Path&quot; → 选择你的 EXE 文件路径（如 D:\\app\\your_app.exe）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. &quot;Startup directory&quot; → 设置工作目录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. 点击 &quot;Install service&quot;</span></span></code></pre></div><h4 id="步骤-3-管理服务" tabindex="-1"><strong>步骤 3：管理服务</strong> <a class="header-anchor" href="#步骤-3-管理服务" aria-label="Permalink to “步骤 3：管理服务”">​</a></h4><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动服务</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nssm start </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你的服务名&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置开机自启（自动延迟启动避免冲突）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sc config </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你的服务名&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> delayed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">auto</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其他命令</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nssm restart </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你的服务名&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nssm remove </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你的服务名&quot;</span></span></code></pre></div><hr><h3 id="方法二-使用-pywin32-代码级集成" tabindex="-1"><strong>方法二：使用 <code>pywin32</code>（代码级集成）</strong> <a class="header-anchor" href="#方法二-使用-pywin32-代码级集成" aria-label="Permalink to “方法二：使用 pywin32（代码级集成）”">​</a></h3><p>如果希望直接从 Python 代码实现服务化：</p><h4 id="步骤-1-安装依赖" tabindex="-1"><strong>步骤 1：安装依赖</strong> <a class="header-anchor" href="#步骤-1-安装依赖" aria-label="Permalink to “步骤 1：安装依赖”">​</a></h4><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pip install pywin32</span></span></code></pre></div><h4 id="步骤-2-修改代码" tabindex="-1"><strong>步骤 2：修改代码</strong> <a class="header-anchor" href="#步骤-2-修改代码" aria-label="Permalink to “步骤 2：修改代码”">​</a></h4><p>在原始 Python 脚本中添加服务控制逻辑（示例）：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> win32serviceutil</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> win32service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> win32event</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> servicemanager</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">win32serviceutil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ServiceFramework</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_svc_name_ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MyPythonService&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_svc_display_name_ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;My Python Service&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, args):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.hWaitStop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> win32event.CreateEvent(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SvcStop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ReportServiceStatus(win32service.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SERVICE_STOP_PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">win32event.SetEvent(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.hWaitStop)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SvcDoRun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在这里写你的主程序逻辑</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">log.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f.write(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Service running...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;__main__&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sys.argv) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">servicemanager.Initialize()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">servicemanager.PrepareToHostSingle(MyService)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">servicemanager.StartServiceCtrlDispatcher()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">win32serviceutil.HandleCommandLine(MyService)</span></span></code></pre></div><h4 id="步骤-3-打包并安装服务" tabindex="-1"><strong>步骤 3：打包并安装服务</strong> <a class="header-anchor" href="#步骤-3-打包并安装服务" aria-label="Permalink to “步骤 3：打包并安装服务”">​</a></h4><div class="language-powershell"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打包（需保持控制台窗口）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pyinstaller </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">noconsole your_script.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装服务（管理员权限）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">your_script.exe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> install</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">your_script.exe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start</span></span></code></pre></div><hr><h3 id="关键注意事项" tabindex="-1"><strong>关键注意事项</strong> <a class="header-anchor" href="#关键注意事项" aria-label="Permalink to “关键注意事项”">​</a></h3><ol><li><strong>会话隔离问题</strong> Windows 服务运行在 <code>Session 0</code>，无法直接与用户桌面交互。如需 GUI：</li></ol><ul><li>改用 <code>任务计划程序</code>（见方法三）</li><li>或使用 <code>winservice</code> 库的交互式服务支持</li></ul><ol start="2"><li><strong>路径问题</strong> 服务的工作目录通常是 <code>C:\\Windows\\System32</code>，所有文件路径需用绝对路径：</li></ol><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(os.path.dirname(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__file__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;config.ini&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ol start="3"><li><strong>日志记录</strong> 服务无法直接打印到控制台，需写入日志文件：</li></ol><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logging</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logging.basicConfig(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;C:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logging.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><hr><h3 id="方法三-任务计划程序-无服务权限时" tabindex="-1"><strong>方法三：任务计划程序（无服务权限时）</strong> <a class="header-anchor" href="#方法三-任务计划程序-无服务权限时" aria-label="Permalink to “方法三：任务计划程序（无服务权限时）”">​</a></h3><p>如果无法获得管理员权限，可用计划任务模拟自启动：</p><ol><li>按 <code>Win+R</code> 输入 <code>taskschd.msc</code></li><li>创建任务 → 设置触发器为“登录时”</li><li>操作：启动你的 EXE</li><li>勾选“使用最高权限运行”</li></ol><hr><h3 id="方法对比" tabindex="-1"><strong>方法对比</strong> <a class="header-anchor" href="#方法对比" aria-label="Permalink to “方法对比”">​</a></h3><table tabindex="0"><thead><tr><th>方法</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><strong>nssm</strong></td><td>稳定，支持任意 EXE</td><td>需单独安装工具</td></tr><tr><td><strong>pywin32</strong></td><td>纯 Python 实现</td><td>需修改代码，兼容性较差</td></tr><tr><td><strong>计划任务</strong></td><td>无需管理员权限</td><td>不是真实服务</td></tr></tbody></table><p>推荐优先使用 <strong>nssm</strong>，这是最可靠的方案。如果遇到权限问题，可尝试计划任务替代。</p>`,37)])])}const o=i(t,[["render",h]]);export{g as __pageData,o as default};
